#Author: Pedro Arthur Santos Gama



#Explication: Firstly i would try to analyse the existence of correlation between those two metrics.
# Probably analysing with Pearson's correlation. If the correlation were comprovided
#I would implment a Linear Regression with those two metrics to relate them. Intuitively we think that the
# All items price series has some realation with the Gasoline price series. If the Gasoline price series raise up
# this will have consequences in the All Items price.

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sn
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

df = pd.read_csv('DATA.csv') ## Data generated by merging some outputs from the code question1.py

list_allitems = []
for item in df['series 1']: ## All Items
  list_allitems.append(item)

list_gasoline = []
for item in df['series 3']: ## Gasoline
  list_gasoline.append(item)

data = pd.DataFrame({'X': list_gasoline ,'Y': list_allitems })

correlation = data.corr() ## calculating the Pearson's correlation so we can see if All Items and Gasoline have correlation

plot = sn.heatmap(correlation, annot = True, fmt=".1f", linewidths=.6) ## Plotting are heatmap so we can see the correlation between those two metrics
plot


X_train, X_test, Y_train, Y_test = train_test_split( data.X, data.Y, test_size=0.33, random_state=42) ##spliting are Data in train test so we can validate our model


reg = LinearRegression().fit(X_train.values.reshape(-1,1), Y_train)


fig, ax = plt.subplots()  ## code section to plot are Data using Matplotlib
ax.scatter(X_test , Y_test)
x = X_test
y = reg.coef_*x + reg.intercept_ 
ax.plot(x,y)

Y_pred = reg.predict(X_test.values.reshape(-1,1))
print(mean_squared_error(Y_test,Y_pred)) ## Printing our error